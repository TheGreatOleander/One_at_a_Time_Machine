{"url":"https://api.github.com/repos/vercel/next.js/issues/81196","repository_url":"https://api.github.com/repos/vercel/next.js","labels_url":"https://api.github.com/repos/vercel/next.js/issues/81196/labels{/name}","comments_url":"https://api.github.com/repos/vercel/next.js/issues/81196/comments","events_url":"https://api.github.com/repos/vercel/next.js/issues/81196/events","html_url":"https://github.com/vercel/next.js/issues/81196","id":3196961552,"node_id":"I_kwDOBC3Cis6-jcMQ","number":81196,"title":"Browserslist configuration not transpiling nullish coalescing operators from node_modules","user":{"login":"Fonger","id":5862369,"node_id":"MDQ6VXNlcjU4NjIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/5862369?v=4","gravatar_id":"","url":"https://api.github.com/users/Fonger","html_url":"https://github.com/Fonger","followers_url":"https://api.github.com/users/Fonger/followers","following_url":"https://api.github.com/users/Fonger/following{/other_user}","gists_url":"https://api.github.com/users/Fonger/gists{/gist_id}","starred_url":"https://api.github.com/users/Fonger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fonger/subscriptions","organizations_url":"https://api.github.com/users/Fonger/orgs","repos_url":"https://api.github.com/users/Fonger/repos","events_url":"https://api.github.com/users/Fonger/events{/privacy}","received_events_url":"https://api.github.com/users/Fonger/received_events","type":"User","user_view_type":"public","site_admin":false},"labels":[{"id":3499409926,"node_id":"LA_kwDOBC3Cis7QlMIG","url":"https://api.github.com/repos/vercel/next.js/labels/SWC","name":"SWC","color":"006B75","default":false,"description":"Related to minification/transpilation in Next.js."},{"id":4771244046,"node_id":"LA_kwDOBC3Cis8AAAABHGNoDg","url":"https://api.github.com/repos/vercel/next.js/labels/Turbopack","name":"Turbopack","color":"FF1E56","default":false,"description":"Related to Turbopack with Next.js."}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2025-07-02T19:25:42Z","updated_at":"2025-07-02T21:22:37Z","closed_at":null,"author_association":"CONTRIBUTOR","type":null,"active_lock_reason":null,"sub_issues_summary":{"total":0,"completed":0,"percent_completed":0},"body":"### Link to the code that reproduces this issue\n\nhttps://github.com/Fonger/uuid-browserslist-issue\n\n### To Reproduce\n\n1. Clone the reproduction repository: `git clone https://github.com/Fonger/uuid-browserslist-issue.git`\n2. Install dependencies: `npm install`\n3. Build the project: `npm run build`\n4. Search for nullish coalescing operators in the output bundle: `find .next/static/chunks -name \"*.js\" -exec grep -l \"uuid\\|UUID\" {} \\; | xargs grep -c \"\\?\\?\"`\n5. Observe that the output contains 5 instances of `??` operators from the UUID package\n\n### Current vs. Expected behavior\n\n**Current Behavior:**\n- When browserslist is configured to target Chrome 58 (which doesn't support nullish coalescing operators introduced in Chrome 80), the build output still contains untranspiled `??` operators from node_modules packages\n- The UUID package's nullish coalescing operators are present in the final bundle: `let o=(e=e||{}).random??e.rng?.()??function(){`\n\n**Expected Behavior:**\n- Browserslist configuration should cause SWC to transpile all modern syntax from node_modules to be compatible with target browsers\n- Nullish coalescing operators should be converted to equivalent compatible syntax (e.g., using logical OR with null/undefined checks)\n- The final bundle should not contain `??` operators when targeting browsers that don't support them\n\n### Provide environment information\n\n```\nOperating System:\n  Platform: darwin\n  Arch: arm64\n  Version: Darwin Kernel Version 24.5.0: Tue Apr 22 19:54:29 PDT 2025; root:xnu-11417.121.6~2/RELEASE_ARM64_T6030\n  Available memory (MB): 18432\n  Available CPU cores: 11\nBinaries:\n  Node: 22.14.0\n  npm: 10.9.2\n  Yarn: 1.22.22\n  pnpm: 8.15.9\nRelevant Packages:\n  next: 15.4.0-canary.109 // Latest available version is detected (15.4.0-canary.109).\n  eslint-config-next: N/A\n  react: 19.1.0\n  react-dom: 19.1.0\n  typescript: 5.8.3\nNext.js Config:\n  output: N/A\n```\n\n### Which area(s) are affected? (Select all that apply)\n\nCompiler (next build, Turbopack, SWC)\n\n### Which stage(s) are affected? (Select all that apply)\n\nnext build (local), Vercel (Deployed)\n\n### Additional context\n\nThis issue became apparent with **UUID 11.0.4**, which introduced nullish coalescing operators (`??`) and optional chaining (`?.`) in their published code. UUID 11.0.3 and earlier versions used traditional `||` operators and didn't exhibit this compatibility issue.\n\n**Version comparison:**\n- UUID 11.0.3: `const rnds = options.random || (options.rng || rng)();` ✅\n- UUID 11.0.4: `const rnds = options.random ?? options.rng?.() ?? rng();` ❌ (not transpiled)\n\nAccording to Next.js 15 documentation, dependencies should be automatically transpiled when using modern bundling. However, packages containing ES2020+ syntax (like nullish coalescing) are not being processed according to the browserslist configuration.\n\n**Expected behavior:** SWC should respect the browserslist configuration (`chrome 58`) and automatically transpile modern syntax in node_modules packages, as ES2020 features like nullish coalescing are not supported in Chrome 58.\n\n**Workaround:** Adding `transpilePackages: ['uuid']` to next.config.js resolves the issue, but this shouldn't be necessary for standard ECMAScript features when proper browserslist targets are configured.\n\nThe reproduction case uses:\n- `.browserslistrc` file with `chrome 58` configuration\n- UUID package v11.1.0 which contains modern JavaScript syntax\n- Next.js reproduction template with a simple client component that displays a UUID\n\nThe issue affects real-world applications that need to support older browsers, as the untranspiled modern syntax could cause runtime errors in target environments.\n\nEvidence of the issue:\n- Bundle location: `.next/static/chunks/app/page-[hash].js`\n- Count of `??` operators: 5 instances\n- Verification command: `grep -o \"\\?\\?\" .next/static/chunks/app/page-*.js | wc -l`\n\nThis represents a broader compatibility issue where Next.js automatic transpilation doesn't work as expected for packages that publish modern JavaScript syntax, suggesting that Next.js/SWC is not properly reading or applying browserslist configuration when transpiling dependencies from node_modules.","reactions":{"url":"https://api.github.com/repos/vercel/next.js/issues/81196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/vercel/next.js/issues/81196/timeline","performed_via_github_app":null,"state_reason":null,"score":1.0}
